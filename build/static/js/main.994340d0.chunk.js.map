{"version":3,"sources":["components/Movie.js","App.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","FEATURED_API","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","getMovies","API","fetch","then","res","json","data","results","onClick","onSubmit","e","preventDefault","placeholder","type","value","onChange","target","length","map","movie","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAmCeA,EA/BD,SAAC,GAAoD,IAC3CC,EADPC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAO7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBACEC,IACEJ,EAbM,mCAcQA,EACV,iKAENK,IAAKN,IAEP,sBAAKI,UAAU,aAAf,UACE,6BAAKJ,IACL,sBAAMI,UAAS,eAlBCL,EAkBqBI,EAjBrCJ,EAAO,EAAU,QACZA,EAAO,EAAU,SACd,OAeO,KAAf,SACGI,OAGL,sBAAKC,UAAU,iBAAf,UACE,4CACA,4BAAIF,WCzBNK,EACJ,sHAuDaC,EAnDH,WACV,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAGAC,qBAAU,WACRC,EAAUR,KACT,IAEH,IAAMQ,EAAY,SAACC,GACjBC,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLV,EAAUU,EAAKC,aAcrB,OACE,qCACE,mCACE,sBAAMC,QAAS,kBAAMR,EAAUR,IAA/B,uBACA,sBAAMiB,SAdW,SAACC,GACtBA,EAAEC,iBACFX,EArBF,6FAqByBH,GACvBC,EAAc,KAWV,SACE,uBACET,UAAU,SACVuB,YAAY,YACZC,KAAK,SACLC,MAAOjB,EACPkB,SAda,SAACL,GACtBZ,EAAcY,EAAEM,OAAOF,eAiBrB,qBAAKzB,UAAU,kBAAf,SACGM,EAAOsB,OAAS,GACftB,EAAOuB,KAAI,SAACC,GACV,OAAO,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,aCjDrCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.994340d0.chunk.js","sourcesContent":["import \"../App.css\";\n\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst Movie = ({ title, poster_path, overview, vote_average }) => {\n  const setVoteColor = (vote) => {\n    if (vote > 8) return \"green\";\n    else if (vote > 6) return \"orange\";\n    else return \"red\";\n  };\n\n  return (\n    <div className=\"movie\">\n      <img\n        src={\n          poster_path\n            ? IMG_API + poster_path\n            : \"https://images.unsplash.com/photo-1586170737458-fc02f1212f59?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80\"\n        }\n        alt={title}\n      />\n      <div className=\"movie-info\">\n        <h3>{title}</h3>\n        <span className={`tag ${setVoteColor(vote_average)} `}>\n          {vote_average}\n        </span>\n      </div>\n      <div className=\"movie-overview\">\n        <h2> Overview </h2>\n        <p>{overview}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Movie;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Movie from \"./components/Movie\";\n\nconst FEATURED_API =\n  \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\";\nconst SEARCH_API =\n  \"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\";\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  /*Hook for fetching data from the API and converting the response into json object and then updating movies with the results.*/\n  useEffect(() => {\n    getMovies(FEATURED_API);\n  }, []);\n\n  const getMovies = (API) => {\n    fetch(API)\n      .then((res) => res.json())\n      .then((data) => {\n        setMovies(data.results);\n      });\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    getMovies(SEARCH_API + searchTerm);\n    setSearchTerm(\"\");\n  };\n\n  const handleOnChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <>\n      <header>\n        <span onClick={() => getMovies(FEATURED_API)}>Movie App</span>\n        <form onSubmit={handleOnSubmit}>\n          <input\n            className=\"search\"\n            placeholder=\"Search...\"\n            type=\"search\"\n            value={searchTerm}\n            onChange={handleOnChange}\n          />\n        </form>\n      </header>\n      <div className=\"movie-container\">\n        {movies.length > 0 &&\n          movies.map((movie) => {\n            return <Movie key={movie.id} {...movie} />;\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}